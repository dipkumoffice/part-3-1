name: Automation Deploy Pipeline

on:
  push:
    branches:
      - main          # prod
      - staging       # staging
      - develop       # dev
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - run: |
          python -m pip install --upgrade pip
          pip install flake8
      - run: flake8 scripts tests

  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - run: pytest tests/

  security_scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - run: |
          python -m pip install --upgrade pip
          pip install bandit safety
      - name: Run Bandit on scripts and tests
        run: bandit -r ./scripts ./tests
      - name: Check dependencies with Safety
        run: safety check --bare --file=requirements.txt
  
  deploy:
    name: Deploy Automation Script
    runs-on: ubuntu-latest
    needs: test
    if: |
      github.ref == 'refs/heads/main' || 
      github.ref == 'refs/heads/staging' || 
      github.ref == 'refs/heads/develop' || 
      github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment || 
                    (github.ref == 'refs/heads/main' && 'prod') || 
                    (github.ref == 'refs/heads/staging' && 'staging') || 
                    (github.ref == 'refs/heads/develop' && 'dev') }}
    steps:
      - uses: actions/checkout@v3
      - run: chmod +x deploy.sh
      - name: Run deploy script
        run: |
          ENV="${{ github.event.inputs.environment || 
                  (github.ref == 'refs/heads/main' && 'prod') || 
                  (github.ref == 'refs/heads/staging' && 'staging') || 
                  (github.ref == 'refs/heads/develop' && 'dev') }}"
          ./deploy.sh "$ENV" $(cat VERSION)

  # force-fail:
  #   name: Force Failure
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Simulate Failure
  #       run: exit 1

  notify_on_failure:
    name: Notify on Failure
    needs: [lint, test,security_scan, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Simulate Notification
        run: |
          echo "Simulating email notification due to failure"

  notify_on_success:
    name: Notify on Success
    needs: [lint, security_scan, test, deploy]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Send Success Notification
        run: echo "âœ… Pipeline succeeded. All good!"